{
	"info": {
		"_postman_id": "d028a420-e540-4c49-8384-9675492d91b4",
		"name": "Medical Devices Active Licence Listing (MDALL)",
		"description": "Health Canada is the federal regulator of therapeutic products, including medical devices. We do not provide medical advice on the use of the products identified in this listing.\n\nThe Medical Devices Bureau (Bureau) of the Therapeutic Products Directorate, Health Canada is the Canadian federal regulator responsible for licensing medical devices in accordance with the Food and Drugs Act and Regulations and the Medical Devices Regulations.\n\nThe Bureau maintains a database of all licensed Class II, III, and IV medical devices offered for sale in Canada. Class I medical devices do not require a medical device licence and are monitored by the Regulatory Operations and Regions Branch (Compliance and Enforcement) through Establishment Licensing.\n\nOnly products which appear in this database listing may be offered for general marketing purposes in Canada. Class I Devices, or devices which relate to Investigational Testing Authorization or Special Access do not appear in this listing.\n\n\nContact Support:\n Email: open-ouvert@tbs-sct.gc.ca",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/licence all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35f830dc-78e3-4766-ae3d-ca6fdee0d25f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"\"items\": {\r",
							"        \"required\": [\r",
							"            \"original_licence_no\",\r",
							"            \"licence_status\",\r",
							"            \"appl_risk_class\",\r",
							"            \"licence_name\",\r",
							"            \"first_licence_status_dt\",\r",
							"            \"last_refresh_dt\",\r",
							"            \"end_date\",\r",
							"            \"licence_type_cd\",\r",
							"            \"company_id\",\r",
							"            \"licence_type_desc\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"original_licence_no\": {\r",
							"                \"$id\": \"#/items/properties/original_licence_no\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_status\": {\r",
							"                \"$id\": \"#/items/properties/licence_status\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"appl_risk_class\": {\r",
							"                \"$id\": \"#/items/properties/appl_risk_class\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_name\": {\r",
							"                \"$id\": \"#/items/properties/licence_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"first_licence_status_dt\": {\r",
							"                \"$id\": \"#/items/properties/first_licence_status_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"last_refresh_dt\": {\r",
							"                \"$id\": \"#/items/properties/last_refresh_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"end_date\": {\r",
							"                \"$id\": \"#/items/properties/end_date\",\r",
							"                \"type\": [\"string\",\"null\"]\r",
							"            },\r",
							"            \"licence_type_cd\": {\r",
							"                \"$id\": \"#/items/properties/licence_type_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_id\": {\r",
							"                \"$id\": \"#/items/properties/company_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_type_desc\": {\r",
							"                \"$id\": \"#/items/properties/licence_type_desc\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "cf03651a-bfa8-47d4-b3e9-efc35f7df81f",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"licence\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all licences."
			},
			"response": [
				{
					"name": "Returns a list of all licences, or if an ID is provided, the list of all licences that correspond to the given licence number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"dolor tempor\",\n  \"licence_status\": \"est \",\n  \"appl_risk_class\": \"nulla mollit dolor deserunt\",\n  \"licence_name\": \"dolore\",\n  \"first_licence_status_dt\": \"incididunt culpa ad nostrud\",\n  \"last_refresh_dt\": \"in sit culpa\",\n  \"end_date\": \"elit aliqua nost\",\n  \"licence_type_cd\": \"Duis exercitation cupidatat\",\n  \"company_id\": \"do labore minim in\",\n  \"licence_type_desc\": \"non Lorem\"\n },\n {\n  \"original_licence_no\": \"Duis sunt culpa occaecat\",\n  \"licence_status\": \"tempor elit\",\n  \"appl_risk_class\": \"occa\",\n  \"licence_name\": \"dolore Ut\",\n  \"first_licence_status_dt\": \"irure in Lorem ut\",\n  \"last_refresh_dt\": \"ut est deserunt\",\n  \"end_date\": \"aliqua mollit dolore\",\n  \"licence_type_cd\": \"do\",\n  \"company_id\": \"irure\",\n  \"licence_type_desc\": \"adipisicing aliqua deserunt fugiat\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/licence id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fc9d54b4-6b46-4d58-be58-519333e57afa",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"licence\");\r",
							"pm.variables.set(\"id\",73596);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "792f6952-3ea2-4d4d-b2ea-7e8799fe6b69",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"\"required\": [\r",
							"        \"original_licence_no\",\r",
							"        \"licence_status\",\r",
							"        \"appl_risk_class\",\r",
							"        \"licence_name\",\r",
							"        \"first_licence_status_dt\",\r",
							"        \"last_refresh_dt\",\r",
							"        \"end_date\",\r",
							"        \"licence_type_cd\",\r",
							"        \"company_id\",\r",
							"        \"licence_type_desc\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"original_licence_no\": {\r",
							"            \"$id\": \"#/properties/original_licence_no\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"licence_status\": {\r",
							"            \"$id\": \"#/properties/licence_status\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"appl_risk_class\": {\r",
							"            \"$id\": \"#/properties/appl_risk_class\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"licence_name\": {\r",
							"            \"$id\": \"#/properties/licence_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"first_licence_status_dt\": {\r",
							"            \"$id\": \"#/properties/first_licence_status_dt\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"last_refresh_dt\": {\r",
							"            \"$id\": \"#/properties/last_refresh_dt\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"end_date\": {\r",
							"            \"$id\": \"#/properties/end_date\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"licence_type_cd\": {\r",
							"            \"$id\": \"#/properties/licence_type_cd\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"company_id\": {\r",
							"            \"$id\": \"#/properties/company_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"licence_type_desc\": {\r",
							"            \"$id\": \"#/properties/licence_type_desc\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.original_licence_no).to.eql(pm.variables.get(\"id\"));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all licences."
			},
			"response": [
				{
					"name": "Returns a list of all licences, or if an ID is provided, the list of all licences that correspond to the given licence number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"dolor tempor\",\n  \"licence_status\": \"est \",\n  \"appl_risk_class\": \"nulla mollit dolor deserunt\",\n  \"licence_name\": \"dolore\",\n  \"first_licence_status_dt\": \"incididunt culpa ad nostrud\",\n  \"last_refresh_dt\": \"in sit culpa\",\n  \"end_date\": \"elit aliqua nost\",\n  \"licence_type_cd\": \"Duis exercitation cupidatat\",\n  \"company_id\": \"do labore minim in\",\n  \"licence_type_desc\": \"non Lorem\"\n },\n {\n  \"original_licence_no\": \"Duis sunt culpa occaecat\",\n  \"licence_status\": \"tempor elit\",\n  \"appl_risk_class\": \"occa\",\n  \"licence_name\": \"dolore Ut\",\n  \"first_licence_status_dt\": \"irure in Lorem ut\",\n  \"last_refresh_dt\": \"ut est deserunt\",\n  \"end_date\": \"aliqua mollit dolore\",\n  \"licence_type_cd\": \"do\",\n  \"company_id\": \"irure\",\n  \"licence_type_desc\": \"adipisicing aliqua deserunt fugiat\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/licence state",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f6bd83c7-1d3b-4bda-b049-f30d695ed201",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"\"items\": {\r",
							"        \"required\": [\r",
							"            \"original_licence_no\",\r",
							"            \"licence_status\",\r",
							"            \"appl_risk_class\",\r",
							"            \"licence_name\",\r",
							"            \"first_licence_status_dt\",\r",
							"            \"last_refresh_dt\",\r",
							"            \"end_date\",\r",
							"            \"licence_type_cd\",\r",
							"            \"company_id\",\r",
							"            \"licence_type_desc\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"original_licence_no\": {\r",
							"                \"$id\": \"#/items/properties/original_licence_no\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_status\": {\r",
							"                \"$id\": \"#/items/properties/licence_status\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"appl_risk_class\": {\r",
							"                \"$id\": \"#/items/properties/appl_risk_class\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_name\": {\r",
							"                \"$id\": \"#/items/properties/licence_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"first_licence_status_dt\": {\r",
							"                \"$id\": \"#/items/properties/first_licence_status_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"last_refresh_dt\": {\r",
							"                \"$id\": \"#/items/properties/last_refresh_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"end_date\": {\r",
							"                \"$id\": \"#/items/properties/end_date\",\r",
							"                \"type\": [\"string\",\"null\"]\r",
							"            },\r",
							"            \"licence_type_cd\": {\r",
							"                \"$id\": \"#/items/properties/licence_type_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_id\": {\r",
							"                \"$id\": \"#/items/properties/company_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_type_desc\": {\r",
							"                \"$id\": \"#/items/properties/licence_type_desc\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function(){\r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var endDate = counter.end_date;\r",
							"       pm.expect(endDate).to.be.eql(null);\r",
							"    } \r",
							"   \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f74dbc57-b7cb-40a1-b5e6-788587186475",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"licence\");\r",
							"pm.variables.set(\"id\",73596);\r",
							"pm.variables.set(\"state\",\"active\");\r",
							"//pm.variables.set(\"state\",\"archived\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&state={{state}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "state",
							"value": "{{state}}",
							"description": "Limit results to those with a specific state"
						}
					]
				},
				"description": "Returns all licences."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all licences, or if an ID is provided, the list of all licences that correspond to the given licence number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"dolor tempor\",\n  \"licence_status\": \"est \",\n  \"appl_risk_class\": \"nulla mollit dolor deserunt\",\n  \"licence_name\": \"dolore\",\n  \"first_licence_status_dt\": \"incididunt culpa ad nostrud\",\n  \"last_refresh_dt\": \"in sit culpa\",\n  \"end_date\": \"elit aliqua nost\",\n  \"licence_type_cd\": \"Duis exercitation cupidatat\",\n  \"company_id\": \"do labore minim in\",\n  \"licence_type_desc\": \"non Lorem\"\n },\n {\n  \"original_licence_no\": \"Duis sunt culpa occaecat\",\n  \"licence_status\": \"tempor elit\",\n  \"appl_risk_class\": \"occa\",\n  \"licence_name\": \"dolore Ut\",\n  \"first_licence_status_dt\": \"irure in Lorem ut\",\n  \"last_refresh_dt\": \"ut est deserunt\",\n  \"end_date\": \"aliqua mollit dolore\",\n  \"licence_type_cd\": \"do\",\n  \"company_id\": \"irure\",\n  \"licence_type_desc\": \"adipisicing aliqua deserunt fugiat\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/licence licence_name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c6de5a99-af27-4d88-bd46-1a0394404a26",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"licence\");\r",
							"pm.variables.set(\"licenceName\",\"OXYGEN\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "77229ae8-fd9b-45de-a3fa-8074f6739c3e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"\"items\": {\r",
							"        \"required\": [\r",
							"            \"original_licence_no\",\r",
							"            \"licence_status\",\r",
							"            \"appl_risk_class\",\r",
							"            \"licence_name\",\r",
							"            \"first_licence_status_dt\",\r",
							"            \"last_refresh_dt\",\r",
							"            \"end_date\",\r",
							"            \"licence_type_cd\",\r",
							"            \"company_id\",\r",
							"            \"licence_type_desc\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"original_licence_no\": {\r",
							"                \"$id\": \"#/items/properties/original_licence_no\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_status\": {\r",
							"                \"$id\": \"#/items/properties/licence_status\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"appl_risk_class\": {\r",
							"                \"$id\": \"#/items/properties/appl_risk_class\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_name\": {\r",
							"                \"$id\": \"#/items/properties/licence_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"first_licence_status_dt\": {\r",
							"                \"$id\": \"#/items/properties/first_licence_status_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"last_refresh_dt\": {\r",
							"                \"$id\": \"#/items/properties/last_refresh_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"end_date\": {\r",
							"                \"$id\": \"#/items/properties/end_date\",\r",
							"                \"type\": [\"string\",\"null\"]\r",
							"            },\r",
							"            \"licence_type_cd\": {\r",
							"                \"$id\": \"#/items/properties/licence_type_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_id\": {\r",
							"                \"$id\": \"#/items/properties/company_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_type_desc\": {\r",
							"                \"$id\": \"#/items/properties/licence_type_desc\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function(){\r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var licence_name = counter.licence_name;        \r",
							"        pm.expect(licence_name).to.include(pm.variables.get(\"licenceName\"));\r",
							"    } \r",
							"   \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&licence_name={{licenceName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "licence_name",
							"value": "{{licenceName}}"
						}
					]
				},
				"description": "Returns all licences."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all licences, or if an ID is provided, the list of all licences that correspond to the given licence number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"dolor tempor\",\n  \"licence_status\": \"est \",\n  \"appl_risk_class\": \"nulla mollit dolor deserunt\",\n  \"licence_name\": \"dolore\",\n  \"first_licence_status_dt\": \"incididunt culpa ad nostrud\",\n  \"last_refresh_dt\": \"in sit culpa\",\n  \"end_date\": \"elit aliqua nost\",\n  \"licence_type_cd\": \"Duis exercitation cupidatat\",\n  \"company_id\": \"do labore minim in\",\n  \"licence_type_desc\": \"non Lorem\"\n },\n {\n  \"original_licence_no\": \"Duis sunt culpa occaecat\",\n  \"licence_status\": \"tempor elit\",\n  \"appl_risk_class\": \"occa\",\n  \"licence_name\": \"dolore Ut\",\n  \"first_licence_status_dt\": \"irure in Lorem ut\",\n  \"last_refresh_dt\": \"ut est deserunt\",\n  \"end_date\": \"aliqua mollit dolore\",\n  \"licence_type_cd\": \"do\",\n  \"company_id\": \"irure\",\n  \"licence_type_desc\": \"adipisicing aliqua deserunt fugiat\"\n }\n]"
				}
			]
		},
		{
			"name": "/licence company_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c5c8866-4ba3-44aa-9332-e15621c91995",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"\"items\": {\r",
							"        \"required\": [\r",
							"            \"original_licence_no\",\r",
							"            \"licence_status\",\r",
							"            \"appl_risk_class\",\r",
							"            \"licence_name\",\r",
							"            \"first_licence_status_dt\",\r",
							"            \"last_refresh_dt\",\r",
							"            \"end_date\",\r",
							"            \"licence_type_cd\",\r",
							"            \"company_id\",\r",
							"            \"licence_type_desc\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"original_licence_no\": {\r",
							"                \"$id\": \"#/items/properties/original_licence_no\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_status\": {\r",
							"                \"$id\": \"#/items/properties/licence_status\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"appl_risk_class\": {\r",
							"                \"$id\": \"#/items/properties/appl_risk_class\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_name\": {\r",
							"                \"$id\": \"#/items/properties/licence_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"first_licence_status_dt\": {\r",
							"                \"$id\": \"#/items/properties/first_licence_status_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"last_refresh_dt\": {\r",
							"                \"$id\": \"#/items/properties/last_refresh_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"end_date\": {\r",
							"                \"$id\": \"#/items/properties/end_date\",\r",
							"                \"type\": [\"string\",\"null\"]\r",
							"            },\r",
							"            \"licence_type_cd\": {\r",
							"                \"$id\": \"#/items/properties/licence_type_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_id\": {\r",
							"                \"$id\": \"#/items/properties/company_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"licence_type_desc\": {\r",
							"                \"$id\": \"#/items/properties/licence_type_desc\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function(){\r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var company_id = counter.company_id;        \r",
							"        pm.expect(company_id).to.be.eqls(pm.variables.get(\"companyId\"));\r",
							"    } \r",
							"   \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2ffad570-25c7-4f4b-9d6e-bb914461aed7",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"licence\");\r",
							"pm.variables.set(\"companyId\",100400);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&company_id={{companyId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "company_id",
							"value": "{{companyId}}"
						}
					]
				},
				"description": "Returns all licences."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all licences, or if an ID is provided, the list of all licences that correspond to the given licence number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"dolor tempor\",\n  \"licence_status\": \"est \",\n  \"appl_risk_class\": \"nulla mollit dolor deserunt\",\n  \"licence_name\": \"dolore\",\n  \"first_licence_status_dt\": \"incididunt culpa ad nostrud\",\n  \"last_refresh_dt\": \"in sit culpa\",\n  \"end_date\": \"elit aliqua nost\",\n  \"licence_type_cd\": \"Duis exercitation cupidatat\",\n  \"company_id\": \"do labore minim in\",\n  \"licence_type_desc\": \"non Lorem\"\n },\n {\n  \"original_licence_no\": \"Duis sunt culpa occaecat\",\n  \"licence_status\": \"tempor elit\",\n  \"appl_risk_class\": \"occa\",\n  \"licence_name\": \"dolore Ut\",\n  \"first_licence_status_dt\": \"irure in Lorem ut\",\n  \"last_refresh_dt\": \"ut est deserunt\",\n  \"end_date\": \"aliqua mollit dolore\",\n  \"licence_type_cd\": \"do\",\n  \"company_id\": \"irure\",\n  \"licence_type_desc\": \"adipisicing aliqua deserunt fugiat\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licence?lang=en&type=json&id=<string>&state=<string>&licence_name=<string>&company_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licence"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "licence_name",
									"value": "<string>"
								},
								{
									"key": "company_id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/company",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3024bf1a-9207-4974-8218-a897e29ed5da",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"    \"items\": {\r",
							"        \"required\": [\r",
							"            \"company_id\",\r",
							"            \"company_name\",\r",
							"            \"addr_line_1\",\r",
							"            \"addr_line_2\",\r",
							"            \"addr_line_3\",\r",
							"            \"postal_code\",\r",
							"            \"city\",\r",
							"            \"country_cd\",\r",
							"            \"region_cd\",\r",
							"            \"company_status\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"company_id\": {\r",
							"                \"$id\": \"#/items/properties/company_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"company_name\": {\r",
							"                \"$id\": \"#/items/properties/company_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"addr_line_1\": {\r",
							"                \"$id\": \"#/items/properties/addr_line_1\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"addr_line_2\": {\r",
							"                \"$id\": \"#/items/properties/addr_line_2\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"addr_line_3\": {\r",
							"                \"$id\": \"#/items/properties/addr_line_3\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"postal_code\": {\r",
							"                \"$id\": \"#/items/properties/postal_code\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"city\": {\r",
							"                \"$id\": \"#/items/properties/city\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"country_cd\": {\r",
							"                \"$id\": \"#/items/properties/country_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"region_cd\": {\r",
							"                \"$id\": \"#/items/properties/region_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_status\": {\r",
							"                \"$id\": \"#/items/properties/company_status\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "014844f7-c5b0-486e-b29b-65acbc6cfb30",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"company\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all companies."
			},
			"response": [
				{
					"name": "Returns a list of all companies, or if an ID is provided, the list of all companies that correspond to the given company ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"company_id\": \"consequat L\",\n  \"company_name\": \"nulla proident\",\n  \"addr_line_1\": \"proident in ex\",\n  \"addr_line_2\": \"qui cupidatat aute ullamco\",\n  \"addr_line_3\": \"in sint aute anim\",\n  \"postal_code\": \"adipisicing qui\",\n  \"city\": \"e\",\n  \"country_cd\": \"sunt ex\",\n  \"region_cd\": \"ex deserunt\",\n  \"company_status\": \"officia do\"\n },\n {\n  \"company_id\": \"voluptate laborum est commodo\",\n  \"company_name\": \"ullamco eu e\",\n  \"addr_line_1\": \"dolor\",\n  \"addr_line_2\": \"anim dolor voluptate\",\n  \"addr_line_3\": \"commodo eiusmod mollit\",\n  \"postal_code\": \"pariatur\",\n  \"city\": \"in pariatur laboris fugiat\",\n  \"country_cd\": \"aliqua laborum id in\",\n  \"region_cd\": \"ut in Excepteur\",\n  \"company_status\": \"dolor officia reprehenderit\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/company by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "86af3b4c-1df7-45f5-a41b-381e71bdde80",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"      \"required\": [\r",
							"        \"company_id\",\r",
							"        \"company_name\",\r",
							"        \"addr_line_1\",\r",
							"        \"addr_line_2\",\r",
							"        \"addr_line_3\",\r",
							"        \"postal_code\",\r",
							"        \"city\",\r",
							"        \"country_cd\",\r",
							"        \"region_cd\",\r",
							"        \"company_status\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"company_id\": {\r",
							"            \"$id\": \"#/properties/company_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"company_name\": {\r",
							"            \"$id\": \"#/properties/company_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"addr_line_1\": {\r",
							"            \"$id\": \"#/properties/addr_line_1\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"addr_line_2\": {\r",
							"            \"$id\": \"#/properties/addr_line_2\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"addr_line_3\": {\r",
							"            \"$id\": \"#/properties/addr_line_3\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"postal_code\": {\r",
							"            \"$id\": \"#/properties/postal_code\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"city\": {\r",
							"            \"$id\": \"#/properties/city\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"country_cd\": {\r",
							"            \"$id\": \"#/properties/country_cd\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"region_cd\": {\r",
							"            \"$id\": \"#/properties/region_cd\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"company_status\": {\r",
							"            \"$id\": \"#/properties/company_status\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"   pm.expect(jsonData.company_id).to.eql(pm.variables.get(\"id\")); \r",
							"   pm.expect(jsonData.company_name).to.eql(\"PFIZER INC.\"); \r",
							"   pm.expect(jsonData.addr_line_1).to.eql(\"411 E. Dallas Drive\"); \r",
							"   pm.expect(jsonData.postal_code).to.eql(\"47802\");  \r",
							"   pm.expect(jsonData.city).to.eql(\"Terre Haute\"); \r",
							"   pm.expect(jsonData.country_cd).to.eql(\"US\");\r",
							"   pm.expect(jsonData.region_cd).to.eql(\"IN\"); \r",
							"   pm.expect(jsonData.company_status).to.eql(\"A\");     \r",
							"  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "97a7db96-9765-4fca-a0ea-a847182cc9ed",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"company\");\r",
							"pm.variables.set(\"id\",123762);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all companies."
			},
			"response": [
				{
					"name": "Returns a list of all companies, or if an ID is provided, the list of all companies that correspond to the given company ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"company_id\": \"consequat L\",\n  \"company_name\": \"nulla proident\",\n  \"addr_line_1\": \"proident in ex\",\n  \"addr_line_2\": \"qui cupidatat aute ullamco\",\n  \"addr_line_3\": \"in sint aute anim\",\n  \"postal_code\": \"adipisicing qui\",\n  \"city\": \"e\",\n  \"country_cd\": \"sunt ex\",\n  \"region_cd\": \"ex deserunt\",\n  \"company_status\": \"officia do\"\n },\n {\n  \"company_id\": \"voluptate laborum est commodo\",\n  \"company_name\": \"ullamco eu e\",\n  \"addr_line_1\": \"dolor\",\n  \"addr_line_2\": \"anim dolor voluptate\",\n  \"addr_line_3\": \"commodo eiusmod mollit\",\n  \"postal_code\": \"pariatur\",\n  \"city\": \"in pariatur laboris fugiat\",\n  \"country_cd\": \"aliqua laborum id in\",\n  \"region_cd\": \"ut in Excepteur\",\n  \"company_status\": \"dolor officia reprehenderit\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/company by status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d449212e-7bed-4e3b-ba4b-9be5dae043b8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"      \"items\": {\r",
							"        \"required\": [\r",
							"            \"company_id\",\r",
							"            \"company_name\",\r",
							"            \"addr_line_1\",\r",
							"            \"addr_line_2\",\r",
							"            \"addr_line_3\",\r",
							"            \"postal_code\",\r",
							"            \"city\",\r",
							"            \"country_cd\",\r",
							"            \"region_cd\",\r",
							"            \"company_status\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"company_id\": {\r",
							"                \"$id\": \"#/items/properties/company_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"company_name\": {\r",
							"                \"$id\": \"#/items/properties/company_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"addr_line_1\": {\r",
							"                \"$id\": \"#/items/properties/addr_line_1\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"addr_line_2\": {\r",
							"                \"$id\": \"#/items/properties/addr_line_2\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"addr_line_3\": {\r",
							"                \"$id\": \"#/items/properties/addr_line_3\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"postal_code\": {\r",
							"                \"$id\": \"#/items/properties/postal_code\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"city\": {\r",
							"                \"$id\": \"#/items/properties/city\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"country_cd\": {\r",
							"                \"$id\": \"#/items/properties/country_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"region_cd\": {\r",
							"                \"$id\": \"#/items/properties/region_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_status\": {\r",
							"                \"$id\": \"#/items/properties/company_status\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {   \r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var company_status = counter.company_status;\r",
							"       pm.expect(company_status).to.be.eql(pm.variables.get(\"status\"));\r",
							"    } \r",
							"   \r",
							"});\r",
							"  \r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6ed1e8fa-cd74-472b-8df9-4c9395ed10b0",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"company\");\r",
							"pm.variables.set(\"status\",\"A\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&status={{status}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "status",
							"value": "{{status}}"
						}
					]
				},
				"description": "Returns all companies."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all companies, or if an ID is provided, the list of all companies that correspond to the given company ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"company_id\": \"consequat L\",\n  \"company_name\": \"nulla proident\",\n  \"addr_line_1\": \"proident in ex\",\n  \"addr_line_2\": \"qui cupidatat aute ullamco\",\n  \"addr_line_3\": \"in sint aute anim\",\n  \"postal_code\": \"adipisicing qui\",\n  \"city\": \"e\",\n  \"country_cd\": \"sunt ex\",\n  \"region_cd\": \"ex deserunt\",\n  \"company_status\": \"officia do\"\n },\n {\n  \"company_id\": \"voluptate laborum est commodo\",\n  \"company_name\": \"ullamco eu e\",\n  \"addr_line_1\": \"dolor\",\n  \"addr_line_2\": \"anim dolor voluptate\",\n  \"addr_line_3\": \"commodo eiusmod mollit\",\n  \"postal_code\": \"pariatur\",\n  \"city\": \"in pariatur laboris fugiat\",\n  \"country_cd\": \"aliqua laborum id in\",\n  \"region_cd\": \"ut in Excepteur\",\n  \"company_status\": \"dolor officia reprehenderit\"\n }\n]"
				}
			]
		},
		{
			"name": "/company by company name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f789399a-8407-4e76-80f5-afd6dbea2b65",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"      \"items\": {\r",
							"        \"required\": [\r",
							"            \"company_id\",\r",
							"            \"company_name\",\r",
							"            \"addr_line_1\",\r",
							"            \"addr_line_2\",\r",
							"            \"addr_line_3\",\r",
							"            \"postal_code\",\r",
							"            \"city\",\r",
							"            \"country_cd\",\r",
							"            \"region_cd\",\r",
							"            \"company_status\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"company_id\": {\r",
							"                \"$id\": \"#/items/properties/company_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"company_name\": {\r",
							"                \"$id\": \"#/items/properties/company_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"addr_line_1\": {\r",
							"                \"$id\": \"#/items/properties/addr_line_1\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"addr_line_2\": {\r",
							"                \"$id\": \"#/items/properties/addr_line_2\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"addr_line_3\": {\r",
							"                \"$id\": \"#/items/properties/addr_line_3\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"postal_code\": {\r",
							"                \"$id\": \"#/items/properties/postal_code\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"city\": {\r",
							"                \"$id\": \"#/items/properties/city\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"country_cd\": {\r",
							"                \"$id\": \"#/items/properties/country_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"region_cd\": {\r",
							"                \"$id\": \"#/items/properties/region_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"company_status\": {\r",
							"                \"$id\": \"#/items/properties/company_status\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {   \r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var company_name = counter.company_name;\r",
							"       pm.expect(company_name.toUpperCase()).to.include(pm.variables.get(\"companyName\").toUpperCase());\r",
							"    } \r",
							"   \r",
							"});\r",
							"  \r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e58e9418-329d-4311-a3bf-3d3c55d8ca86",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"company\");\r",
							"pm.variables.set(\"companyName\",\"bayer\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&company_name={{companyName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "company_name",
							"value": "{{companyName}}"
						}
					]
				},
				"description": "Returns all companies."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all companies, or if an ID is provided, the list of all companies that correspond to the given company ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"company_id\": \"consequat L\",\n  \"company_name\": \"nulla proident\",\n  \"addr_line_1\": \"proident in ex\",\n  \"addr_line_2\": \"qui cupidatat aute ullamco\",\n  \"addr_line_3\": \"in sint aute anim\",\n  \"postal_code\": \"adipisicing qui\",\n  \"city\": \"e\",\n  \"country_cd\": \"sunt ex\",\n  \"region_cd\": \"ex deserunt\",\n  \"company_status\": \"officia do\"\n },\n {\n  \"company_id\": \"voluptate laborum est commodo\",\n  \"company_name\": \"ullamco eu e\",\n  \"addr_line_1\": \"dolor\",\n  \"addr_line_2\": \"anim dolor voluptate\",\n  \"addr_line_3\": \"commodo eiusmod mollit\",\n  \"postal_code\": \"pariatur\",\n  \"city\": \"in pariatur laboris fugiat\",\n  \"country_cd\": \"aliqua laborum id in\",\n  \"region_cd\": \"ut in Excepteur\",\n  \"company_status\": \"dolor officia reprehenderit\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/company?lang=en&type=json&id=<string>&status=<string>&company_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "company_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/device by id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cb7056c5-240c-4a20-9c53-cd004d58e060",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"device\");\r",
							"pm.variables.set(\"id\",199695);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f7e1819a-ea4d-487c-b8be-ee754903a177",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"    \"required\": [\r",
							"        \"original_licence_no\",\r",
							"        \"device_id\",\r",
							"        \"first_licence_dt\",\r",
							"        \"end_date\",\r",
							"        \"trade_name\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"original_licence_no\": {\r",
							"            \"$id\": \"#/properties/original_licence_no\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"device_id\": {\r",
							"            \"$id\": \"#/properties/device_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"first_licence_dt\": {\r",
							"            \"$id\": \"#/properties/first_licence_dt\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"end_date\": {\r",
							"            \"$id\": \"#/properties/end_date\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"trade_name\": {\r",
							"            \"$id\": \"#/properties/trade_name\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {   \r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var device_id = counter.device_id;\r",
							"       pm.expect(device_id).to.be.eql(pm.variables.get(\"id\"));\r",
							"    } \r",
							"   \r",
							"});\r",
							"  \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all devices."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all devices, or if an ID is provided, the list of all devices that correspond to the given device identification number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"sunt cillum exercitatio\",\n  \"device_id\": \"deserunt elit incididunt\",\n  \"first_licence_dt\": \"est velit eu\",\n  \"end_date\": \"aliqua et ad Duis id\",\n  \"trade_name\": \"laborum dolor ea\"\n },\n {\n  \"original_licence_no\": \"nulla qui in dolor\",\n  \"device_id\": \"eu anim ut\",\n  \"first_licence_dt\": \"aliqua dolore\",\n  \"end_date\": \"aliquip ipsum ex\",\n  \"trade_name\": \"Excepteur pariatur\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/device by state",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "38b93fce-2257-4648-a48a-8a14f16c06e2",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"device\");\r",
							"pm.variables.set(\"state\",\"active\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c6da61c8-8323-4ce9-b2cb-6e610b314311",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"original_licence_no\",\r",
							"            \"device_id\",\r",
							"            \"first_licence_dt\",\r",
							"            \"end_date\",\r",
							"            \"trade_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"original_licence_no\": {\r",
							"                \"$id\": \"#/items/properties/original_licence_no\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"device_id\": {\r",
							"                \"$id\": \"#/items/properties/device_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"first_licence_dt\": {\r",
							"                \"$id\": \"#/items/properties/first_licence_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"end_date\": {\r",
							"                \"$id\": \"#/items/properties/end_date\",\r",
							"                \"type\": [\"string\",\"null\"]\r",
							"            },\r",
							"            \"trade_name\": {\r",
							"                \"$id\": \"#/items/properties/trade_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {   \r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var end_date = counter.end_date;\r",
							"       pm.expect(end_date).to.be.eql(null);\r",
							"    } \r",
							"   \r",
							"});\r",
							"  \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&state={{state}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						}
					]
				},
				"description": "Returns all devices."
			},
			"response": [
				{
					"name": "Returns a list of all devices, or if an ID is provided, the list of all devices that correspond to the given device identification number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"sunt cillum exercitatio\",\n  \"device_id\": \"deserunt elit incididunt\",\n  \"first_licence_dt\": \"est velit eu\",\n  \"end_date\": \"aliqua et ad Duis id\",\n  \"trade_name\": \"laborum dolor ea\"\n },\n {\n  \"original_licence_no\": \"nulla qui in dolor\",\n  \"device_id\": \"eu anim ut\",\n  \"first_licence_dt\": \"aliqua dolore\",\n  \"end_date\": \"aliquip ipsum ex\",\n  \"trade_name\": \"Excepteur pariatur\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/device by device name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9504d6b4-6ccd-44e8-8ac7-e8b77567cabb",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"device\");\r",
							"pm.variables.set(\"deviceName\",\"red\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5c8a9d1d-864c-4ce4-b630-79a49b871ef2",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"original_licence_no\",\r",
							"            \"device_id\",\r",
							"            \"first_licence_dt\",\r",
							"            \"end_date\",\r",
							"            \"trade_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"original_licence_no\": {\r",
							"                \"$id\": \"#/items/properties/original_licence_no\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"device_id\": {\r",
							"                \"$id\": \"#/items/properties/device_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"first_licence_dt\": {\r",
							"                \"$id\": \"#/items/properties/first_licence_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"end_date\": {\r",
							"                \"$id\": \"#/items/properties/end_date\",\r",
							"                \"type\": [\"string\",\"null\"]\r",
							"            },\r",
							"            \"trade_name\": {\r",
							"                \"$id\": \"#/items/properties/trade_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {   \r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var trade_name = counter.trade_name;\r",
							"       pm.expect(trade_name.toUpperCase()).to.include(pm.variables.get(\"deviceName\").toUpperCase());\r",
							"    } \r",
							"   \r",
							"});\r",
							"  \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&device_name={{deviceName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "device_name",
							"value": "{{deviceName}}"
						}
					]
				},
				"description": "Returns all devices."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all devices, or if an ID is provided, the list of all devices that correspond to the given device identification number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"sunt cillum exercitatio\",\n  \"device_id\": \"deserunt elit incididunt\",\n  \"first_licence_dt\": \"est velit eu\",\n  \"end_date\": \"aliqua et ad Duis id\",\n  \"trade_name\": \"laborum dolor ea\"\n },\n {\n  \"original_licence_no\": \"nulla qui in dolor\",\n  \"device_id\": \"eu anim ut\",\n  \"first_licence_dt\": \"aliqua dolore\",\n  \"end_date\": \"aliquip ipsum ex\",\n  \"trade_name\": \"Excepteur pariatur\"\n }\n]"
				}
			]
		},
		{
			"name": "/deviceidentifier by id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2b978535-be20-48de-9cb5-d913a47fac74",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"deviceidentifier\");\r",
							"pm.variables.set(\"id\",408838);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e435e758-bb45-48ab-a2cb-925a68ec9923",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"  \"items\": {\r",
							"        \"required\": [\r",
							"            \"original_licence_no\",\r",
							"            \"device_id\",\r",
							"            \"first_licence_dt\",\r",
							"            \"end_date\",\r",
							"            \"device_identifier\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"original_licence_no\": {\r",
							"                \"$id\": \"#/items/properties/original_licence_no\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"device_id\": {\r",
							"                \"$id\": \"#/items/properties/device_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"first_licence_dt\": {\r",
							"                \"$id\": \"#/items/properties/first_licence_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"end_date\": {\r",
							"                \"$id\": \"#/items/properties/end_date\",\r",
							"                \"type\": [\"string\",\"null\"]\r",
							"            },\r",
							"            \"device_identifier\": {\r",
							"                \"$id\": \"#/items/properties/device_identifier\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {   \r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var device_id = counter.device_id;\r",
							"       pm.expect(device_id).to.be.eql(pm.variables.get(\"id\"));\r",
							"    } \r",
							"   \r",
							"});\r",
							"  \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all device identifiers."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deviceidentifier?type=json&id=<string>&state=<string>&device_identifier=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deviceidentifier"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_identifier",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all device identifiers, or if an ID is provided, the list of all device identifiers that correspond to the given device identifier",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deviceidentifier?type=json&id=<string>&state=<string>&device_identifier=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deviceidentifier"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_identifier",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n \"incididunt dolore ut\",\n \"anim veniam pariatur in\"\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deviceidentifier?type=json&id=<string>&state=<string>&device_identifier=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deviceidentifier"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_identifier",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/deviceidentifier by device_identifier",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6bfda761-49d8-40d6-8eaa-f03effb3e8e3",
						"exec": [
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"deviceidentifier\");\r",
							"pm.variables.set(\"deviceidentifier\",\"4017\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "306fbc5c-e943-4c38-80d6-46a4ddf96bec",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"original_licence_no\",\r",
							"            \"device_id\",\r",
							"            \"first_licence_dt\",\r",
							"            \"end_date\",\r",
							"            \"device_identifier\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"original_licence_no\": {\r",
							"                \"$id\": \"#/items/properties/original_licence_no\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"device_id\": {\r",
							"                \"$id\": \"#/items/properties/device_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"first_licence_dt\": {\r",
							"                \"$id\": \"#/items/properties/first_licence_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"end_date\": {\r",
							"                \"$id\": \"#/items/properties/end_date\",\r",
							"                \"type\": [\"string\",\"null\"]\r",
							"            },\r",
							"            \"device_identifier\": {\r",
							"                \"$id\": \"#/items/properties/device_identifier\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"//verify the response values match the device identifier provided in the request parameter\r",
							"pm.test(\"verify json values\", function () {   \r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var device_identifier = counter.device_identifier;\r",
							"        pm.expect(device_identifier).to.include(pm.variables.get(\"deviceidentifier\"));\r",
							"    } \r",
							"   \r",
							"});\r",
							"  \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?type={{type}}&device_identifier={{deviceidentifier}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "device_identifier",
							"value": "{{deviceidentifier}}"
						}
					]
				},
				"description": "Returns all devices."
			},
			"response": [
				{
					"name": "Returns a list of all devices, or if an ID is provided, the list of all devices that correspond to the given device identification number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"sunt cillum exercitatio\",\n  \"device_id\": \"deserunt elit incididunt\",\n  \"first_licence_dt\": \"est velit eu\",\n  \"end_date\": \"aliqua et ad Duis id\",\n  \"trade_name\": \"laborum dolor ea\"\n },\n {\n  \"original_licence_no\": \"nulla qui in dolor\",\n  \"device_id\": \"eu anim ut\",\n  \"first_licence_dt\": \"aliqua dolore\",\n  \"end_date\": \"aliquip ipsum ex\",\n  \"trade_name\": \"Excepteur pariatur\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/deviceidentifier by state and identifier",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3aa848bd-4fa6-4f31-9adb-aaa7926b1be1",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"deviceidentifier\");\r",
							"pm.variables.set(\"deviceidentifier\",\"4017\");\r",
							"pm.variables.set(\"state\",\"archived\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c2aae541-f25f-458f-9fc5-bf5bdd8eb6c5",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"original_licence_no\",\r",
							"            \"device_id\",\r",
							"            \"first_licence_dt\",\r",
							"            \"end_date\",\r",
							"            \"device_identifier\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"original_licence_no\": {\r",
							"                \"$id\": \"#/items/properties/original_licence_no\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"device_id\": {\r",
							"                \"$id\": \"#/items/properties/device_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"first_licence_dt\": {\r",
							"                \"$id\": \"#/items/properties/first_licence_dt\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"end_date\": {\r",
							"                \"$id\": \"#/items/properties/end_date\",\r",
							"                \"type\": [\"string\",\"null\"]\r",
							"            },\r",
							"            \"device_identifier\": {\r",
							"                \"$id\": \"#/items/properties/device_identifier\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {   \r",
							"  var jsonData = pm.response.json();  \r",
							"  \r",
							"   for (var i = 0; i < jsonData.length; i++) \r",
							"    {\r",
							"        var counter = jsonData[i];\r",
							"        var end_date = counter.end_date;\r",
							"        var device_identifier = counter.device_identifier;\r",
							"        pm.expect(device_identifier).to.include(pm.variables.get(\"deviceidentifier\"));\r",
							"        pm.expect(end_date).not.to.be.eql(null);\r",
							"    } \r",
							"   \r",
							"});\r",
							"  \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?type={{type}}&state={{state}}&device_identifier={{deviceidentifier}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "device_identifier",
							"value": "{{deviceidentifier}}"
						}
					]
				},
				"description": "Returns all devices."
			},
			"response": [
				{
					"name": "Returns a list of all devices, or if an ID is provided, the list of all devices that correspond to the given device identification number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"sunt cillum exercitatio\",\n  \"device_id\": \"deserunt elit incididunt\",\n  \"first_licence_dt\": \"est velit eu\",\n  \"end_date\": \"aliqua et ad Duis id\",\n  \"trade_name\": \"laborum dolor ea\"\n },\n {\n  \"original_licence_no\": \"nulla qui in dolor\",\n  \"device_id\": \"eu anim ut\",\n  \"first_licence_dt\": \"aliqua dolore\",\n  \"end_date\": \"aliquip ipsum ex\",\n  \"trade_name\": \"Excepteur pariatur\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device?type=json&id=<string>&state=<string>&device_name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "<string>"
								},
								{
									"key": "device_name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/licencetype",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b44b4c2-1a74-43a1-b071-b7023421fd3b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"  \"items\": {\r",
							"        \"required\": [\r",
							"            \"licence_type_cd\",\r",
							"            \"licence_type_desc\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"licence_type_cd\": {\r",
							"                \"$id\": \"#/items/properties/licence_type_cd\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"licence_type_desc\": {\r",
							"                \"$id\": \"#/items/properties/licence_type_desc\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "82b06544-17c1-41a3-a4ac-2ed96c8827c7",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"licencetype\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all licence types."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licencetype?lang=en&type=json&code=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licencetype"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "code",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all licence types, or if a code is provided, the list of all licence types that correspond to the given code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licencetype?lang=en&type=json&code=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licencetype"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "code",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"licence_type_cd\": \"velit laborum consectetur\",\n  \"licence_type_desc\": \"ut labore\"\n },\n {\n  \"licence_type_cd\": \"velit qui quis nisi\",\n  \"licence_type_desc\": \"et ipsum id\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licencetype?lang=en&type=json&code=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licencetype"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "code",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/licencetype with code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b45bc0c-f785-4423-9442-ef2341385c16",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"   \"required\": [\r",
							"        \"licence_type_cd\",\r",
							"        \"licence_type_desc\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"licence_type_cd\": {\r",
							"            \"$id\": \"#/properties/licence_type_cd\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"licence_type_desc\": {\r",
							"            \"$id\": \"#/properties/licence_type_desc\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"   pm.expect(jsonData.licence_type_cd).to.eql(\"S\"); \r",
							"   pm.expect(jsonData.licence_type_desc).to.eql(\"System\");   \r",
							"   pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();       \r",
							"    pm.expect(jsonData.licence_type_cd).to.eql(\"S\"); \r",
							"    pm.expect(jsonData.licence_type_desc).to.eql(\"Système\");   \r",
							"    pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "04cd3977-3788-48b8-91ca-18198980f156",
						"exec": [
							"//pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"licencetype\");\r",
							"pm.variables.set(\"code\",\"S\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&code={{code}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "code",
							"value": "{{code}}",
							"description": "Limit results to those with matching licence type code"
						}
					]
				},
				"description": "Returns all licence types."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licencetype?lang=en&type=json&code=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licencetype"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "code",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all licence types, or if a code is provided, the list of all licence types that correspond to the given code",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licencetype?lang=en&type=json&code=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licencetype"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "code",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"licence_type_cd\": \"velit laborum consectetur\",\n  \"licence_type_desc\": \"ut labore\"\n },\n {\n  \"licence_type_cd\": \"velit qui quis nisi\",\n  \"licence_type_desc\": \"et ipsum id\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/licencetype?lang=en&type=json&code=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licencetype"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "code",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/sbdlocation",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5837a70b-4b90-4851-9c6b-3a0ab3dde8bd",
						"exec": [
							"pm.globals.set(\"type\",\"xml\");\r",
							"pm.variables.set(\"path\",\"sbdlocation\");\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6fca75b2-c3af-4bc1-a8e8-c509f4efa2b8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "5bd2a10fceb891caca805a62e958e55b",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all summary basis decision locations."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sbdlocation?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sbdlocation"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sbdlocation?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sbdlocation"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all locations, or if an ID is provided, the list of all locations that correspond to the given licence number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sbdlocation?type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sbdlocation"
							],
							"query": [
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"original_licence_no\": \"Excepteur Lorem\",\n  \"sbd_notice_web_loc\": \"eu nulla\",\n  \"sbd_web_loc\": \"Ut pariatur\"\n },\n {\n  \"original_licence_no\": \"nostrud ex\",\n  \"sbd_notice_web_loc\": \"sunt\",\n  \"sbd_web_loc\": \"sin\"\n }\n]"
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://mdall-hc-sc-apicast-production.api.canada.ca/v1/",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}